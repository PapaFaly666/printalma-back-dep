
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  role: 'role',
  status: 'status',
  photo_profil: 'photo_profil',
  login_attempts: 'login_attempts',
  locked_until: 'locked_until',
  last_login_at: 'last_login_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  must_change_password: 'must_change_password',
  vendeur_type: 'vendeur_type',
  phone: 'phone',
  country: 'country',
  address: 'address',
  shop_name: 'shop_name',
  profile_photo_url: 'profile_photo_url'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  used: 'used',
  createdAt: 'createdAt',
  usedAt: 'usedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  stock: 'stock',
  status: 'status',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isValidated: 'isValidated',
  validatedAt: 'validatedAt',
  validatedBy: 'validatedBy',
  rejectionReason: 'rejectionReason',
  submittedForValidationAt: 'submittedForValidationAt',
  hasCustomDesigns: 'hasCustomDesigns',
  designsMetadata: 'designsMetadata'
};

exports.Prisma.ProductSizeScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  sizeName: 'sizeName'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.ColorVariationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  colorCode: 'colorCode',
  productId: 'productId'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  view: 'view',
  url: 'url',
  publicId: 'publicId',
  naturalWidth: 'naturalWidth',
  naturalHeight: 'naturalHeight',
  designUrl: 'designUrl',
  designPublicId: 'designPublicId',
  designFileName: 'designFileName',
  designUploadDate: 'designUploadDate',
  designSize: 'designSize',
  designOriginalName: 'designOriginalName',
  designDescription: 'designDescription',
  isDesignActive: 'isDesignActive',
  colorVariationId: 'colorVariationId'
};

exports.Prisma.DelimitationScalarFieldEnum = {
  id: 'id',
  x: 'x',
  y: 'y',
  width: 'width',
  height: 'height',
  rotation: 'rotation',
  name: 'name',
  coordinateType: 'coordinateType',
  absoluteX: 'absoluteX',
  absoluteY: 'absoluteY',
  absoluteWidth: 'absoluteWidth',
  absoluteHeight: 'absoluteHeight',
  originalImageWidth: 'originalImageWidth',
  originalImageHeight: 'originalImageHeight',
  productImageId: 'productImageId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  referenceWidth: 'referenceWidth',
  referenceHeight: 'referenceHeight'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  userId: 'userId',
  status: 'status',
  totalAmount: 'totalAmount',
  phoneNumber: 'phoneNumber',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  validatedAt: 'validatedAt',
  validatedBy: 'validatedBy',
  shippingName: 'shippingName',
  shippingStreet: 'shippingStreet',
  shippingCity: 'shippingCity',
  shippingRegion: 'shippingRegion',
  shippingPostalCode: 'shippingPostalCode',
  shippingCountry: 'shippingCountry',
  shippingAddressFull: 'shippingAddressFull'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  size: 'size',
  color: 'color',
  colorId: 'colorId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  message: 'message',
  isRead: 'isRead',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.DesignScalarFieldEnum = {
  id: 'id',
  vendorId: 'vendorId',
  name: 'name',
  description: 'description',
  price: 'price',
  category: 'category',
  imageUrl: 'imageUrl',
  thumbnailUrl: 'thumbnailUrl',
  cloudinaryPublicId: 'cloudinaryPublicId',
  thumbnailPublicId: 'thumbnailPublicId',
  fileSize: 'fileSize',
  originalFileName: 'originalFileName',
  dimensions: 'dimensions',
  format: 'format',
  tags: 'tags',
  isDraft: 'isDraft',
  isPublished: 'isPublished',
  isPending: 'isPending',
  isValidated: 'isValidated',
  validatedAt: 'validatedAt',
  validatedBy: 'validatedBy',
  rejectionReason: 'rejectionReason',
  submittedForValidationAt: 'submittedForValidationAt',
  views: 'views',
  likes: 'likes',
  earnings: 'earnings',
  usageCount: 'usageCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  publishedAt: 'publishedAt'
};

exports.Prisma.VendorProductScalarFieldEnum = {
  id: 'id',
  baseProductId: 'baseProductId',
  vendorId: 'vendorId',
  name: 'name',
  description: 'description',
  price: 'price',
  stock: 'stock',
  status: 'status',
  adminProductName: 'adminProductName',
  adminProductDescription: 'adminProductDescription',
  adminProductPrice: 'adminProductPrice',
  designBase64: 'designBase64',
  designCloudinaryUrl: 'designCloudinaryUrl',
  designCloudinaryPublicId: 'designCloudinaryPublicId',
  designPositioning: 'designPositioning',
  designScale: 'designScale',
  designApplicationMode: 'designApplicationMode',
  sizes: 'sizes',
  colors: 'colors',
  vendorName: 'vendorName',
  vendorDescription: 'vendorDescription',
  vendorStock: 'vendorStock',
  basePriceAdmin: 'basePriceAdmin',
  isValidated: 'isValidated',
  validatedAt: 'validatedAt',
  validatedBy: 'validatedBy',
  rejectionReason: 'rejectionReason',
  submittedForValidationAt: 'submittedForValidationAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VendorProductImageScalarFieldEnum = {
  id: 'id',
  vendorProductId: 'vendorProductId',
  colorId: 'colorId',
  colorName: 'colorName',
  colorCode: 'colorCode',
  imageType: 'imageType',
  cloudinaryUrl: 'cloudinaryUrl',
  cloudinaryPublicId: 'cloudinaryPublicId',
  originalImageKey: 'originalImageKey',
  width: 'width',
  height: 'height',
  fileSize: 'fileSize',
  format: 'format',
  createdAt: 'createdAt',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.DesignTransformationScalarFieldEnum = {
  id: 'id',
  vendorProductId: 'vendorProductId',
  delimitationIndex: 'delimitationIndex',
  xOffset: 'xOffset',
  yOffset: 'yOffset',
  scaleFactor: 'scaleFactor',
  positioning: 'positioning',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  SUPERADMIN: 'SUPERADMIN',
  ADMIN: 'ADMIN',
  VENDEUR: 'VENDEUR'
};

exports.VendeurType = exports.$Enums.VendeurType = {
  DESIGNER: 'DESIGNER',
  INFLUENCEUR: 'INFLUENCEUR',
  ARTISTE: 'ARTISTE'
};

exports.PublicationStatus = exports.$Enums.PublicationStatus = {
  PUBLISHED: 'PUBLISHED',
  DRAFT: 'DRAFT',
  PENDING: 'PENDING'
};

exports.CoordinateType = exports.$Enums.CoordinateType = {
  PERCENTAGE: 'PERCENTAGE',
  ABSOLUTE: 'ABSOLUTE'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  ORDER_NEW: 'ORDER_NEW',
  ORDER_UPDATED: 'ORDER_UPDATED',
  SYSTEM: 'SYSTEM',
  SUCCESS: 'SUCCESS',
  WARNING: 'WARNING',
  ERROR: 'ERROR'
};

exports.DesignCategory = exports.$Enums.DesignCategory = {
  LOGO: 'LOGO',
  PATTERN: 'PATTERN',
  ILLUSTRATION: 'ILLUSTRATION',
  TYPOGRAPHY: 'TYPOGRAPHY',
  ABSTRACT: 'ABSTRACT'
};

exports.VendorProductStatus = exports.$Enums.VendorProductStatus = {
  PUBLISHED: 'PUBLISHED',
  DRAFT: 'DRAFT',
  PENDING: 'PENDING'
};

exports.DesignPositioning = exports.$Enums.DesignPositioning = {
  CENTER: 'CENTER',
  TOP: 'TOP',
  BOTTOM: 'BOTTOM'
};

exports.Prisma.ModelName = {
  User: 'User',
  PasswordReset: 'PasswordReset',
  Product: 'Product',
  ProductSize: 'ProductSize',
  Category: 'Category',
  ColorVariation: 'ColorVariation',
  ProductImage: 'ProductImage',
  Delimitation: 'Delimitation',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Notification: 'Notification',
  Design: 'Design',
  VendorProduct: 'VendorProduct',
  VendorProductImage: 'VendorProductImage',
  DesignTransformation: 'DesignTransformation'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
