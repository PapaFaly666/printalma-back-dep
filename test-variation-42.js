// Test sp√©cifique pour la variation 42
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testVariation42() {
  console.log('üß™ Test sp√©cifique de la variation 42\n');

  try {
    // V√©rifier la variation 42
    const variation = await prisma.variation.findUnique({
      where: { id: 42 },
      include: {
        subCategory: true
      }
    });

    if (!variation) {
      console.log('‚ùå Variation 42 non trouv√©e');
      return;
    }

    console.log(`üìã Variation: ${variation.name}`);
    console.log(`   Sous-cat√©gorie: ${variation.subCategory.name}`);

    // V√©rifier les produits qui utilisent directement cette variation
    const productsWithVariation = await prisma.product.count({
      where: {
        variationId: 42,
        isDelete: false
      }
    });

    console.log(`   Produits utilisant directement cette variation: ${productsWithVariation}`);

    // NOUVELLE LOGIQUE : Seulement v√©rifier les produits directs
    if (productsWithVariation > 0) {
      console.log('\nüõ°Ô∏è  PROTECTION ACTIV√âE (nouvelle logique)');
      console.log(`   La variation est utilis√©e par ${productsWithVariation} produit(s) directement`);
      console.log('   -> Suppression BLOQU√âE');
    } else {
      console.log('\n‚úÖ PAS DE PROTECTION (nouvelle logique)');
      console.log('   La variation n\'est utilis√©e par aucun produit directement');
      console.log('   -> Suppression AUTORIS√âE');
    }

    // Ancienne logique (pour comparaison)
    const parentSubCategoryProducts = await prisma.product.count({
      where: {
        subCategoryId: variation.subCategoryId,
        variationId: null,
        isDelete: false
      }
    });

    const oldTotal = productsWithVariation + parentSubCategoryProducts;
    console.log('\nüìä Comparaison avec l\'ancienne logique:');
    console.log(`   Ancienne logique total: ${oldTotal} (${productsWithVariation} directs + ${parentSubCategoryProducts} sous-cat√©gorie)`);
    if (oldTotal > 0) {
      console.log('   Ancienne logique: BLOQUERAIT la suppression');
    } else {
      console.log('   Ancienne logique: AUTORISERAIT la suppression');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

testVariation42();